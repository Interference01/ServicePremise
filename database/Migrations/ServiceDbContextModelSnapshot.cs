// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServicePremise.database;

#nullable disable

namespace ServicePremise.Migrations
{
    [DbContext(typeof(ServiceDbContext))]
    partial class ServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServicePremise.database.entities.Contract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EquipmentUnitsCount")
                        .HasColumnType("int");

                    b.Property<Guid>("PremiseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TypeEquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PremiseId");

                    b.HasIndex("TypeEquipmentId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("ServicePremise.database.entities.Premise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("EquipmentArea")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Premises", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("931dc822-0092-4fa0-a44e-4794c58520f6"),
                            Code = "#4124",
                            EquipmentArea = 6.00m,
                            Name = "Київ. Курортна 25"
                        },
                        new
                        {
                            Id = new Guid("cfe56f40-cf77-43af-ae04-53f8e4405ca5"),
                            Code = "#4125",
                            EquipmentArea = 10.00m,
                            Name = "Львів. Юнкерова 86г"
                        },
                        new
                        {
                            Id = new Guid("a7ca34a9-bb28-454e-939f-bdddbec3d059"),
                            Code = "#4126",
                            EquipmentArea = 20.00m,
                            Name = "Житомир. Жашківська 33/2"
                        });
                });

            modelBuilder.Entity("ServicePremise.database.entities.TypeEquipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TypesEquipment", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5ce3db4b-070a-49a6-aeaa-6188f77fa8f7"),
                            Area = 4.50m,
                            Code = "#1421",
                            Name = "Шиномонтажне обладнання"
                        },
                        new
                        {
                            Id = new Guid("0136730c-5aa4-4ca3-919d-31ad6b433bf0"),
                            Area = 15.00m,
                            Code = "#1422",
                            Name = "Токарне обладнання"
                        },
                        new
                        {
                            Id = new Guid("2722fde6-3112-48cc-8521-fa71df04cc94"),
                            Area = 8.00m,
                            Code = "#1423",
                            Name = "Швейні станки"
                        },
                        new
                        {
                            Id = new Guid("3a5087b1-a418-4895-aefe-945802b1e3d6"),
                            Area = 2.50m,
                            Code = "#1424",
                            Name = "Столярне обладнання"
                        });
                });

            modelBuilder.Entity("ServicePremise.database.entities.Contract", b =>
                {
                    b.HasOne("ServicePremise.database.entities.Premise", "Premise")
                        .WithMany()
                        .HasForeignKey("PremiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServicePremise.database.entities.TypeEquipment", "TypeEquipment")
                        .WithMany()
                        .HasForeignKey("TypeEquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Premise");

                    b.Navigation("TypeEquipment");
                });
#pragma warning restore 612, 618
        }
    }
}
